{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/chooser/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsD3C,2BAAiB;;;;IAC5C;;;;;OAKG;;;;;;;IAEH,yBAAO;;;;;;cAAC,MAAc;QACpB,MAAM,CAAC;KACR;;gBAXF,UAAU;;;QAQR,OAAO,EAAE;;;;0CAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAVU,OAAO;QARnB,MAAM,CAAC;YACN,UAAU,EAAE,SAAS;YACrB,MAAM,EAAE,wBAAwB;YAChC,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,gDAAgD;YACtD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,OAAO,EAWnB;kBAlED;EAuD6B,iBAAiB;SAAjC,OAAO","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface ChooserResult {\n  data: Uint8Array;\n  dataURI: string;\n  mediaType: string;\n  name: string;\n  uri: string;\n}\n\n/**\n * @name Chooser\n * @description\n * File chooser plugin for Cordova.\n *\n * The following must be added to config.xml to prevent crashing when selecting large files on Android:\n * ```xml\n * <platform name=\"android\">\n *  <edit-config\n *    file=\"app/src/main/AndroidManifest.xml\"\n *    mode=\"merge\"\n *    target=\"/manifest/application\">\n *    <application android:largeHeap=\"true\" />\n *  </edit-config>\n * </platform>\n * ```\n *\n * @usage\n * ```typescript\n * import { Chooser } from '@ionic-native/chooser';\n *\n *\n * constructor(private chooser: Chooser) { }\n *\n * ...\n *\n *\n * this.chooser.getFile()\n *   .then(file => console.log(file ? file.name : 'canceled'))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n *\n * @interfaces\n * ChooserResult\n */\n@Plugin({\n  pluginName: 'Chooser',\n  plugin: 'cordova-plugin-chooser',\n  pluginRef: 'chooser',\n  repo: 'https://github.com/cyph/cordova-plugin-chooser',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class Chooser extends IonicNativePlugin {\n  /**\n   * Displays native prompt for user to select a file.\n   * @param {string} [accept] Optional MIME type filter (e.g. 'image/gif,video/*').\n   * @return {Promise<any>} Promise containing selected file's raw binary data,\n   * base64-encoded data: URI, MIME type, display name, and original URI.\n   */\n  @Cordova()\n  getFile(accept: string): Promise<ChooserResult | undefined> {\n    return;\n  }\n}\n"]}